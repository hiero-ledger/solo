version: 3
vars:
  SOLO_NAMESPACE: "solo-ns"
  SOLO_DEPLOYMENT: "solo-deployment"
  SOLO_CLUSTER_NAME: "solo-cluster"
  SOLO_CLUSTER_REF: "solo-cluster-reference"
  SOLO_CLUSTER_SETUP_NAMESPACE: "{{.SOLO_NAMESPACE}}"
  CN_LOCAL_BUILD_PATH: "../hiero-consensus-node/hedera-node/data"
  LOCAL_BUILD_FLAG: "--local-build-path {{.CN_LOCAL_BUILD_PATH}}"
  CN_VERSION: "v0.64.2"
  TEMPORARY_DIR: "/tmp/solo-deployment"
  PREPARE_OUTPUT_DIR: "{{ .TEMPORARY_DIR }}/prepare-output"
  APPLICATION_PROPERTIES: "{{ .TEMPORARY_DIR }}/application.properties"
  APPLICATION_PROPERTIES_FLAG: "--application-properties {{.APPLICATION_PROPERTIES}}"
  SOLO_COMMAND: "npm run solo --" # use this if running with solo source repository
  # SOLO_COMMAND: "solo" # use this if running with installed version of Solo
tasks:
  default:
    desc: Run a full standalone Solo network with mirror node, relay and prepare for node operations
    dir: ../..
    cmds:
      - cmd: |
          # Clean up any existing Kind clusters
          for cluster in $(kind get clusters); do
            kind delete cluster -n $cluster
          done

      - cmd: |
          # Clean up Solo data
          rm -Rf ~/.solo

      - cmd: |
          # Create Kind cluster
          kind create cluster -n {{ .SOLO_CLUSTER_NAME }}

      - cmd: |
          # Install Solo
          if [[ "{{ .SOLO_COMMAND }}" == "solo" ]];then
            npm install -g @hashgraph/solo
            solo --version
            which solo
          else
            task build
            npm run solo -- --version
          fi

      - cmd: |
          # Solo init
          {{ .SOLO_COMMAND }} init --dev

      - cmd: |
          # Solo cluster-ref connect
          {{ .SOLO_COMMAND }} cluster-ref connect --cluster-ref {{ .SOLO_CLUSTER_REF }} --context kind-{{.SOLO_CLUSTER_NAME}} --dev

      - cmd: |
          # Solo deployment create
          {{ .SOLO_COMMAND }} deployment create -n {{ .SOLO_NAMESPACE }} --deployment {{ .SOLO_DEPLOYMENT }} --dev

      - cmd: |
          # Solo deployment add-cluster
          {{ .SOLO_COMMAND }} deployment add-cluster --deployment {{ .SOLO_DEPLOYMENT }} --cluster-ref {{ .SOLO_CLUSTER_REF }} \
          --num-consensus-nodes 2 --dev

      - cmd: |
          # Create prepare output directory
          mkdir -p {{.PREPARE_OUTPUT_DIR}}

      - cmd: |
          # Copy and update application.properties
          cp resources/templates/application.properties {{ .APPLICATION_PROPERTIES }}
          echo "contracts.evm.ethTransaction.zeroHapiFees.enabled=false" >> {{ .APPLICATION_PROPERTIES }}

      - cmd: |
          # Solo node keys
          {{ .SOLO_COMMAND }} node keys --gossip-keys --tls-keys --deployment {{ .SOLO_DEPLOYMENT }} --dev

      - cmd: |
          # Solo cluster-ref setup
          {{ .SOLO_COMMAND }} cluster-ref setup -s {{ .SOLO_CLUSTER_SETUP_NAMESPACE }} --dev

      - cmd: |
          # Solo network deploy
          {{ .SOLO_COMMAND }} network deploy --deployment {{ .SOLO_DEPLOYMENT }} --release-tag {{ .CN_VERSION }} \
          --pvcs {{.APPLICATION_PROPERTIES_FLAG}} --dev

      - cmd: |
          # Solo node setup
          {{ .SOLO_COMMAND }} node setup --deployment {{ .SOLO_DEPLOYMENT }} --release-tag {{ .CN_VERSION }} \
          {{.LOCAL_BUILD_FLAG}} --dev

      - cmd: |
          # Solo node start
          {{ .SOLO_COMMAND }} node start --deployment {{ .SOLO_DEPLOYMENT }} --dev

      - cmd: |
          # Solo mirror-node deploy
          {{ .SOLO_COMMAND }} mirror-node deploy --deployment {{ .SOLO_DEPLOYMENT }} \
          --cluster-ref {{ .SOLO_CLUSTER_REF }} --enable-ingress --dev

      - cmd: |
          # Solo explorer deploy
          {{ .SOLO_COMMAND }} explorer deploy --deployment {{ .SOLO_DEPLOYMENT }} --cluster-ref {{ .SOLO_CLUSTER_REF }} \
          --dev

      - cmd: |
          # Solo relay deploy
          {{ .SOLO_COMMAND }} relay deploy --node-aliases node1 --deployment {{ .SOLO_DEPLOYMENT }} \
          --cluster-ref {{ .SOLO_CLUSTER_REF }} --dev

      - cmd: |
          # Solo node update-prepare
          {{ .SOLO_COMMAND }} node update-prepare --deployment {{ .SOLO_DEPLOYMENT }} --node-alias node2 \
          --release-tag {{ .CN_VERSION }} --output-dir {{ .PREPARE_OUTPUT_DIR }} --dev --new-account-number 0.0.5

      - cmd: |
          # SDK NodeUpdateTransaction
          which node
          node --version
          node examples/node-update-transaction/solo-node-update-transaction.js

      - cmd: |
          # Prepare Upgrade
          {{ .SOLO_COMMAND }} node prepare-upgrade --deployment {{ .SOLO_DEPLOYMENT }} --skip-node-alias node2 --dev 

      - cmd: |
          # Freeze Upgrade
          {{ .SOLO_COMMAND }} node freeze-upgrade --deployment {{ .SOLO_DEPLOYMENT }} --skip-node-alias node2 --dev 

      - cmd: |
          # Solo node update-execute
          {{ .SOLO_COMMAND }} node update-execute --deployment {{ .SOLO_DEPLOYMENT }} --input-dir {{ .PREPARE_OUTPUT_DIR }} \
          {{ .LOCAL_BUILD_FLAG }} --dev

      - cmd: |
          # Mirror Node gRPC port forward
          /bin/bash -c "nohup kubectl port-forward svc/mirror-grpc -n {{ .SOLO_NAMESPACE }} 5600:5600 > /dev/null 2>&1 &"

      - cmd: |
          # Mirror Node REST API port forward
          /bin/bash -c "nohup kubectl port-forward svc/mirror-rest -n {{ .SOLO_NAMESPACE }} 5551:80 > /dev/null 2>&1 &"

      - cmd: |
          # Mirror Node REST Java API port forward
          /bin/bash -c "nohup kubectl port-forward svc/mirror-restjava -n {{ .SOLO_NAMESPACE }} 8084:80 > /dev/null 2>&1 &"

      - cmd: |
          # Show active port forwards
          ps -ef | grep port-forward | grep -v grep

  destroy:
    desc: Destroy the Solo network with block node
    dir: ../..
    cmds:
      - cmd: |
          # Solo node stop
          {{ .SOLO_COMMAND }} node stop --deployment {{ .SOLO_DEPLOYMENT }} --dev

      - cmd: |
          # Solo relay destroy
          {{ .SOLO_COMMAND }} relay destroy --deployment {{ .SOLO_DEPLOYMENT }} --node-aliases node1 --dev \
          --cluster-ref {{ .SOLO_CLUSTER_REF }}

      - cmd: |
          # Solo explorer destroy
          {{ .SOLO_COMMAND }} explorer destroy --deployment {{ .SOLO_DEPLOYMENT }} --force --dev

      - cmd: |
          # Solo mirror-node destroy
          {{ .SOLO_COMMAND }} mirror-node destroy --deployment {{ .SOLO_DEPLOYMENT }} --force --dev

      - cmd: |
          # Solo network destroy
          {{ .SOLO_COMMAND }} network destroy --deployment {{ .SOLO_DEPLOYMENT }} --force --dev --delete-pvcs --delete-secrets -q

      - cmd: |
          # Delete Kind cluster
          kind delete cluster -n {{ .SOLO_CLUSTER_NAME }}
