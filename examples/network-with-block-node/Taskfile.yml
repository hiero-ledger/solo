version: 3

env:
  SOLO_COMMAND:
    sh: |
      if [ "${USE_RELEASED_VERSION}" = "true" ]; then
        echo "npx @hashgraph/solo"
      else
        echo "npm run solo --"
      fi

vars:
  # This Taskfile creates a Hiero deployment with a block node using Kind and kubectl.
  NODE_IDENTIFIERS: "node1"
  BLOCK_NODE_RELEASE_TAG: "v0.14.0"
  SOLO_NETWORK_SIZE: "1"
  DEPLOYMENT: "deployment-network-with-block-node"
  NAMESPACE: "namespace-network-with-block-node"

  CLUSTER_NAME: "solo-cluster"
  CONTEXT: "kind-solo-cluster"
  CLUSTER_REFERENCE: "kind-solo-cluster"
tasks:
  default:
    desc: Run a full standalone Solo network with block node, mirror node, and relay
    cmds:
      # Install Solo CLI
      - cmd: |
          if [ "${USE_RELEASED_VERSION}" = "true" ]; then
            npm i @hashgraph/solo@latest
          else
            echo "Skipping npm install - using development version"
          fi

      # Create Kind cluster
      - cmd: kind create cluster -n {{ .CLUSTER_NAME }}

      # Wait for control plane
      - cmd: sleep 10 # wait for control plane to come up

      # Set kubectl context
      - cmd: kubectl config set-context {{ .CONTEXT }}

      # Solo init
      - cmd: $SOLO_COMMAND init

      # Solo cluster-ref config connect
      - cmd: $SOLO_COMMAND cluster-ref config connect --cluster-ref {{ .CLUSTER_REFERENCE }} --context {{ .CONTEXT }}

      # Solo deployment config create
      - cmd: $SOLO_COMMAND deployment config create --deployment {{ .DEPLOYMENT }} --namespace {{ .NAMESPACE }}

      # Solo deployment cluster attach
      - cmd: |
          $SOLO_COMMAND deployment cluster attach --deployment {{ .DEPLOYMENT }} --cluster-ref {{ .CLUSTER_REFERENCE }} \
          --num-consensus-nodes {{ .SOLO_NETWORK_SIZE }}

      # Solo cluster-ref config setup
      - cmd: $SOLO_COMMAND cluster-ref config setup --cluster-ref {{ .CLUSTER_REFERENCE }}

      # Solo block node add
      - cmd: |
          $SOLO_COMMAND block node add --deployment {{ .DEPLOYMENT }} --release-tag {{ .CN_VERSION }} \
          --chart-version {{ .BLOCK_NODE_RELEASE_TAG }} \
          --cluster-ref {{ .CLUSTER_REFERENCE }}

      # Solo node keys
      - cmd: |
          $SOLO_COMMAND keys consensus generate --gossip-keys --tls-keys --deployment {{ .DEPLOYMENT }} \
          --node-aliases {{ .NODE_IDENTIFIERS }}

      # Solo network deploy
      - cmd: $SOLO_COMMAND consensus network deploy --deployment {{ .DEPLOYMENT }} --pvcs true --node-aliases {{ .NODE_IDENTIFIERS }}

      # Solo node setup
      - cmd: $SOLO_COMMAND consensus node setup --node-aliases {{ .NODE_IDENTIFIERS }} --deployment {{ .DEPLOYMENT }}

      # Solo node start
      - cmd: $SOLO_COMMAND consensus node start --deployment {{ .DEPLOYMENT }} --node-aliases {{ .NODE_IDENTIFIERS }}

      # Solo mirror node add
      - cmd: $SOLO_COMMAND mirror node add --deployment {{ .DEPLOYMENT }} --cluster-ref {{ .CLUSTER_REFERENCE }} --pinger

      # Solo relay node add
      - cmd: $SOLO_COMMAND relay node add --deployment {{ .DEPLOYMENT }} --node-aliases {{ .NODE_IDENTIFIERS }}

      # Solo explorer node add
      - cmd: $SOLO_COMMAND explorer node add --deployment {{ .DEPLOYMENT }} --cluster-ref {{ .CLUSTER_REFERENCE }}
  destroy:
    desc: Destroy the Solo network with block node
    cmds:
      # solo consensus node stop
      - cmd: $SOLO_COMMAND consensus node stop --deployment {{ .DEPLOYMENT }} --node-aliases {{ .NODE_IDENTIFIERS }}

      # solo mirror node destroy
      - cmd: $SOLO_COMMAND mirror node destroy --deployment {{ .DEPLOYMENT }} --force

      # solo relay node destroy
      - cmd: $SOLO_COMMAND relay node destroy --deployment {{ .DEPLOYMENT }} --node-aliases {{ .NODE_IDENTIFIERS }}

      # solo explorer node destroy
      - cmd: $SOLO_COMMAND explorer node destroy --deployment {{ .DEPLOYMENT }}

      # solo consensus network destroy
      - cmd: $SOLO_COMMAND consensus network destroy --deployment {{ .DEPLOYMENT }} --force

      # Delete Kind cluster
      - cmd: kind delete cluster -n {{ .CLUSTER_NAME }}
