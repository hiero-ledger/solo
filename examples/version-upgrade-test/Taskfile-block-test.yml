version: 3

env:
  SOLO_COMMAND:
    sh: |
      echo "npm run solo --"

vars:
  NODE_IDENTIFIERS: "node1,node2"
  SOLO_NETWORK_SIZE: "2"
  DEPLOYMENT: "solo-deployment"
  NAMESPACE: "solo-e2e"
  CLUSTER_NAME: "solo-e2e"
  CONTEXT: "kind-solo-e2e"
  CLUSTER_REFERENCE: "kind-solo-e2e"
  CLUSTER_SETUP_NAMESPACE: "solo-setup"
  
  # SOLO environment variables
  SOLO_CLUSTER_NAME: "solo-e2e"
  SOLO_NAMESPACE: "solo-e2e"
  SOLO_CLUSTER_SETUP_NAMESPACE: "solo-setup"
  SOLO_DEPLOYMENT: "solo-deployment"
  
  # Block node configuration
  BLOCK_NODE_CHART_VERSION: "0.18.0"

tasks:
  default:
    desc: Run full block node test scenario
    cmds:
      - task: setup-cluster
      - task: deploy-network
      - task: verify-block-functionality
      - task: upgrade-block-node
      - task: verify-block-functionality

  setup-cluster:
    desc: Setup Kind cluster and Solo environment
    cmds:
      - cmd: |
          kind delete cluster -n "{{ .SOLO_CLUSTER_NAME }}"
          kind create cluster -n "{{ .SOLO_CLUSTER_NAME }}"

          kind load docker-image \
            quay.io/minio/minio:RELEASE.2024-02-09T21-25-16Z \
            quay.io/prometheus-operator/prometheus-config-reloader:v0.68.0 \
            quay.io/prometheus-operator/prometheus-operator:v0.68.0 \
            quay.io/prometheus/alertmanager:v0.26.0 \
            quay.io/prometheus/node-exporter:v1.6.1 \
            quay.io/prometheus/prometheus:v2.47.1 \
            quay.io/minio/operator:v7.1.1 \
            quay.io/minio/operator-sidecar:v7.0.1 \
            registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.10.0 \
            ghcr.io/hiero-ledger/hiero-block-node:0.19.0  \
            ghcr.io/hiero-ledger/hiero-block-node:0.18.0 \
            quay.io/metallb/controller:v0.15.2 \
            quay.io/metallb/speaker:v0.15.2 \
            curlimages/curl:8.9.1 \
            busybox:1.36.1 \
            envoyproxy/envoy:v1.21.1 \
            haproxytech/haproxy-alpine:2.4.25 \
            ghcr.io/hashgraph/solo-containers/backup-uploader:0.35.0 \
            ghcr.io/hashgraph/solo-containers/ubi8-init-java21:0.38.1 \
            ghcr.io/mhga24/envoyproxy/envoy:v1.22.0 \
            quay.io/minio/operator:v5.0.7 busybox \
            ghcr.io/hashgraph/solo-cheetah/cheetah:0.3.1 \
            docker.io/otel/opentelemetry-collector-contrib:0.72.0 \
            --name "{{ .SOLO_CLUSTER_NAME }}"

          rm -rf ~/.solo/*; rm -rf test/data/tmp/*;

          $SOLO_COMMAND cluster-ref config connect --cluster-ref kind-{{ .SOLO_CLUSTER_NAME }} --context kind-{{ .SOLO_CLUSTER_NAME }}
          $SOLO_COMMAND deployment config create -n "{{ .SOLO_NAMESPACE }}" --deployment "{{ .SOLO_DEPLOYMENT }}"
          $SOLO_COMMAND deployment cluster attach --deployment "{{ .SOLO_DEPLOYMENT }}" --cluster-ref kind-{{ .SOLO_CLUSTER_NAME }} --num-consensus-nodes 2
          $SOLO_COMMAND cluster-ref config setup -s "{{ .SOLO_CLUSTER_SETUP_NAMESPACE }}"

  deploy-network:
    desc: Deploy block nodes and consensus network
    cmds:
      - cmd: |
          export BLOCK_NODE_CHART=block-node-helm-chart
          $SOLO_COMMAND block node add --deployment "{{ .SOLO_DEPLOYMENT }}" --cluster-ref kind-"{{ .SOLO_CLUSTER_NAME }}" --chart-version {{ .BLOCK_NODE_CHART_VERSION }}
          unset BLOCK_NODE_CHART

          $SOLO_COMMAND keys consensus generate --gossip-keys --tls-keys -i {{ .NODE_IDENTIFIERS }} --deployment "{{ .SOLO_DEPLOYMENT }}"

          $SOLO_COMMAND consensus network deploy --deployment "{{ .SOLO_DEPLOYMENT }}" -i {{ .NODE_IDENTIFIERS }}
          $SOLO_COMMAND consensus node setup -i {{ .NODE_IDENTIFIERS }} --deployment "{{ .SOLO_DEPLOYMENT }}"
          $SOLO_COMMAND consensus node start -i {{ .NODE_IDENTIFIERS }} --deployment "{{ .SOLO_DEPLOYMENT }}"

  verify-block-functionality:
    desc: Setup port-forward and verify block node is working correctly
    cmds:
      - cmd: |
          $SOLO_COMMAND ledger account create -d {{ .SOLO_DEPLOYMENT }}
          curl http://127.0.0.1:40840 || true # kill old port-forward after block node pod restarts
          kubectl port-forward --namespace "{{ .SOLO_NAMESPACE }}" svc/block-node-1 40840:40840 &
          sleep 5 # wait for port-forward to be established

          ps -ef|grep port-forward

          cd ../../test/data
          OUTPUT=$(./get-block.sh 1)
          echo "$OUTPUT" | tail -n 30
          if echo "$OUTPUT" | grep -q '"status": "SUCCESS"'; then
            echo "✓ Block node test passed - status is SUCCESS"
          else
            echo "✗ Block node test failed - status is not SUCCESS"
            exit 1
          fi
          cd -

  upgrade-block-node:
    desc: Upgrade block node to latest version
    cmds:
      - cmd: |
          $SOLO_COMMAND block node upgrade --deployment "{{ .SOLO_DEPLOYMENT }}" --cluster-ref kind-"{{ .SOLO_CLUSTER_NAME }}"

