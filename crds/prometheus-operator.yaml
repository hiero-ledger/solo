# ServiceAccount for Prometheus Operator
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-operator
  namespace: solo-674de1ca
---
# ClusterRole for Prometheus Operator to manage custom resources
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-operator
rules:
- apiGroups: ["monitoring.solo.hedera.com"]
  resources: ["servicemonitors", "prometheuses"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["services", "endpoints", "pods", "nodes", "nodes/proxy", "configmaps", "secrets", "namespaces", "persistentvolumeclaims"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets", "replicasets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["extensions", "networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]
---
# ClusterRoleBinding for Prometheus Operator
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-operator
subjects:
- kind: ServiceAccount
  name: prometheus-operator
  namespace: solo-674de1ca
---
# Prometheus Operator Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-operator
  namespace: solo-674de1ca
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-operator
  template:
    metadata:
      labels:
        app: prometheus-operator
    spec:
      serviceAccountName: prometheus-operator
      containers:
      - name: prometheus-operator
        image: quay.io/prometheus-operator/prometheus-operator:v0.63.0
        args:
        - "--namespaces=solo-674de1ca"
        - "--prometheus-config-reloader=quay.io/prometheus-operator/prometheus-config-reloader:v0.63.0"
        - "--config-reloader-cpu-limit=100m"
        - "--config-reloader-memory-limit=50Mi"
        - "--prometheus-instance-namespaces=solo-674de1ca"
        - "--alertmanager-instance-namespaces=solo-674de1ca"
        - "--kubelet-service=kube-system/kubelet"
        - "--log-level=info"
        ports:
        - containerPort: 8080
          name: http
---
# Prometheus ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: solo-674de1ca
---
# Prometheus ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources: ["nodes", "nodes/metrics", "services", "endpoints", "pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["monitoring.solo.hedera.com"]
  resources: ["servicemonitors"]
  verbs: ["get", "list", "watch"]
---
# Prometheus ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: solo-674de1ca
---
# Prometheus Service for the operator-managed Prometheus
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: solo-674de1ca
  labels:
    app: prometheus
spec:
  selector:
    app: prometheus
  ports:
  - name: web
    port: 9090
    targetPort: web
  type: NodePort
