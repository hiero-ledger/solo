##
# Copyright (C) 2023-2025 Hedera Hashgraph, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##

name: "Performance Test Solo Deployment"

on:
  workflow_dispatch:
  workflow_call:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - main
      - 'release/*'
defaults:
  run:
    shell: bash

jobs:
  performance-test:
    timeout-minutes: 60
    runs-on: hiero-solo-linux-large
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Posix Dependencies
        id: set-posix-dependencies
        run: |
          # Install jq (a lightweight and flexible command-line JSON processor)
          sudo apt-get update && sudo apt-get install -y jq

      - name: Setup Node
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: 22

      - name: Install wget
        run: |
          if ! command -v wget >/dev/null 2>&1; then
            sudo apt-get update
            sudo apt-get install -y wget
          fi

      - name: Install Kubectl
        uses: step-security/setup-kubectl@fa3574e17195eaed56b1e9d9095c58d0aee24f03 # pinned to v4.0.1
        with:
          version: 'v1.27.3'
        id: install

      - name: Setup Kind
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
        with:
          install_only: true
          node_image: kindest/node:v1.31.4@sha256:2cb39f7295fe7eafee0842b1052a599a4fb0f8bcf3f83d96c7f4864c357c6c30
          version: v0.26.0
          kubectl_version: v1.31.4
          verbosity: 3
          wait: 120s

      - name: Setup Helm
        uses: azure/setup-helm@1a275c3b69536ee54be43f2070a358922e12c8d4 # v4.3.1
        with:
          version: "v3.17.1" # helm version

      - name: Install Dependencies
        id: npm-deps
        uses: step-security/retry@e1d59ce1f574b32f0915e3a8df055cfe9f99be5d # v3.0.4
        with:
          max_attempts: 10
          timeout_minutes: 10
          command: |
            npm ci

      - name: Install Task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
        with:
          version: 3.39.2
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Compile Project
        run: task build

      - name: Pull Kind Docker Image
        run: docker image pull kindest/node:v1.31.4@sha256:2cb39f7295fe7eafee0842b1052a599a4fb0f8bcf3f83d96c7f4864c357c6c30

      - name: Setup E2E Tests
        if: ${{ !cancelled() && inputs.test-script != 'test-e2e-node-local-ptt' }}
        uses: step-security/retry@e1d59ce1f574b32f0915e3a8df055cfe9f99be5d # v3.0.4
        with:
          max_attempts: 3
          timeout_minutes: 10
          command: |
            ./test/e2e/dual-cluster/setup-dual-e2e.sh

      - name: Run E2E Tests
        run: |
          echo "solo-e2e-c1" > .env
          echo ONE_SHOT_WITH_BLOCK_NODE=true >> .env
          echo MIRROR_NODE_PINGER_TPS=10 >> .env
          echo ONE_SHOT_METRICS_SLEEP_MINUTES=30 >> .env
          cat .env
          task test-e2e-one-shot-single

      - name: Log Metrics
        id: log-metrics
        run: |
          for logFile in ~/.solo/logs/*.json; do 
            if [[ -f "$logFile" ]]; then
              echo "::group::JSON Format"
              cat $logFile | jq
              echo "::endgroup::" 
              echo "json_log=$(cat $logFile)" >> $GITHUB_OUTPUT
              echo "::group::Spreadsheet Format"
              echo "logFile=$logFile"
              JSON_FILENAME=$logFile ./.github/workflows/script/metrics.sh
              echo "::endgroup::"
            else
              echo "json_log={}" >> $GITHUB_OUTPUT
            fi
          done
          echo "solo_log_dir=$(cd ~/.solo/logs && pwd)" >> $GITHUB_OUTPUT

      - name: Write Log Metrics Message File
        id: log-metrics-file
        if: ${{ !cancelled() && !failure() && steps.log-metrics.outputs.json_log != '{}' }}
        env:
          LOG_FILE: "${{ steps.log-metrics.outputs.solo_log_dir }}/log_file.md"
          JSON_INPUT: "${{ toJSON(fromJSON(steps.log-metrics.outputs.json_log)) }}"
        run: |
          echo "## Log Metrics - ${{ inputs.custom-job-label }}" >> $LOG_FILE
          echo "" >> $LOG_FILE
          echo "<details>" >> $LOG_FILE
          echo "<summary>" >> $LOG_FILE
          echo "JSON Log Metrics" >> $LOG_FILE
          echo "</summary>" >> $LOG_FILE
          echo '<pre><code class="JSON">' >> $LOG_FILE
          echo "$JSON_INPUT" >> $LOG_FILE
          echo "</code></pre>" >> $LOG_FILE
          echo "</details>" >> $LOG_FILE
          echo "log_file=$LOG_FILE" >> $GITHUB_OUTPUT

      - name: Comment PR with Log Metrics
        if: ${{ !cancelled() && !failure() && github.event_name == 'pull_request' && steps.log-metrics.outputs.json_log != '{}' }}
        uses: step-security/actions-comment-pull-request@7f6021194300cf361f7ba99a346c4daa6cab809b # v3.0.1
        with:
          mode: recreate
          file-path: ${{ steps.log-metrics-file.outputs.log_file }}
          comment-tag: log-metrics-${{ inputs.test-script }}

      - name: Upload E2E Logs to GitHub
        if: ${{ github.event_name != 'workflow_dispatch' && inputs.test-script != 'test-e2e-external-database' && !cancelled() }}
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: solo-${{ inputs.test-script }}.log
          path: ~/.solo/logs/*
          overwrite: true
          if-no-files-found: error

      # TODO pull the metrics total memory minus NLG and ensure that it is below a variable, else fail the job
