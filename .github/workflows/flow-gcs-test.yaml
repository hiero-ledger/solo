##
# Copyright (C) 2023-2024 Hedera Hashgraph, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##

name: "Test GCS as bucket storage"

on:
  workflow_dispatch:
  workflow_call:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
defaults:
  run:
    shell: bash

permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  gcs-storage-test:
    timeout-minutes: 20
    runs-on: hiero-solo-linux-large
    strategy:
      fail-fast: false
      matrix:
        storageType: ["gcs_only", "minio_only", "aws_only"]
    steps:
      - name: Check if job should be skipped
        id: check
        run: |
          if [[ "${{ github.actor }}" == "dependabot[bot]" || "${{ github.event.pull_request.head.repo.fork }}" == "true" ]]; then
            echo "run=false" >> $GITHUB_OUTPUT
          else
            echo "run=true" >> $GITHUB_OUTPUT
          fi

      - name: Harden Runner
        if: steps.check.outputs.run == 'true'
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout Code
        if: steps.check.outputs.run == 'true'
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Authenticate to Google Cloud
        if: steps.check.outputs.run == 'true'
        id: google-auth
        uses: step-security/google-github-auth@40f6deebd366f16c782d7a0ad0844e3b96a032a6 # v2.1.10
        with:
          workload_identity_provider: "projects/652966097426/locations/global/workloadIdentityPools/solo-bucket-dev-pool/providers/gh-provider"
          service_account: "solo-bucket-reader-writer@solo-bucket-dev.iam.gserviceaccount.com"

      - name: Setup Google Cloud SDK
        if: steps.check.outputs.run == 'true'
        uses: google-github-actions/setup-gcloud@6a7c903a70c8625ed6700fa299f5ddb4ca6022e9 # v2.1.5

      - name: Get Current Job Log URL
        if: steps.check.outputs.run == 'true'
        uses: Tiryoh/gha-jobid-action@be260d8673c9211a84cdcf37794ebd654ba81eef # v1.4.0
        id: jobs
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          job_name: "gcs-storage-test (${{ matrix.storageType }})"

      - name: Create Bucket Name and Prefix
        if: steps.check.outputs.run == 'true'
        run: |
          export BUCKET_NAME="solo-ci-test-streams"
          export PREFIX=${{ steps.jobs.outputs.job_id }}

          echo "BUCKET_NAME=${BUCKET_NAME}" >> $GITHUB_ENV
          echo "PREFIX=${PREFIX}" >> $GITHUB_ENV          
          
          export BACKUP_BUCKET_NAME="solo-ci-backups"
          echo "BACKUP_BUCKET_NAME=${BACKUP_BUCKET_NAME}" >> $GITHUB_ENV

      - name: Setup Node
        if: steps.check.outputs.run == 'true'
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 20.19.3
          cache: npm

      - name: Install Task
        if: steps.check.outputs.run == 'true'
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
        with:
          version: 3.39.2
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Helm
        if: steps.check.outputs.run == 'true'
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0
        with:
          version: "v3.12.3" # helm version

      - name: Setup Kind
        if: steps.check.outputs.run == 'true'
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
        with:
          install_only: true
          node_image: kindest/node:v1.31.4@sha256:2cb39f7295fe7eafee0842b1052a599a4fb0f8bcf3f83d96c7f4864c357c6c30
          version: v0.26.0
          kubectl_version: v1.31.4
          verbosity: 3
          wait: 120s

      - name: Install Dependencies
        if: steps.check.outputs.run == 'true'
        id: npm-deps
        run: |
          npm ci
          npm install -g @hashgraph/solo

      - name: Install Kubectl
        uses: step-security/setup-kubectl@2edbf6aff97d814e9dc52827498ac51fe972e6d0 # pinned to v4.0.0
        if: steps.check.outputs.run == 'true'
        with:
          version: 'v1.27.3'
        id: install

      - name: Compile Project
        if: steps.check.outputs.run == 'true'
        run: task build

      - name: Run GCS Test Script for type ${{ matrix.storageType }}
        if: steps.check.outputs.run == 'true'
        env:
          GCS_ACCESS_KEY: ${{ secrets.GCP_S3_ACCESS_KEY }}
          GCS_SECRET_KEY: ${{ secrets.GCP_S3_SECRET_KEY }}
          BUCKET_NAME: ${{ env.BUCKET_NAME }}
          PREFIX: ${{ env.PREFIX }}
          BACKUP_BUCKET_NAME: ${{ env.BACKUP_BUCKET_NAME }}/${{ steps.jobs.outputs.job_id }}
          STORAGE_TYPE: ${{ matrix.storageType }}
          GCP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.GCP_SERVICE_ACCOUNT_TOKEN }}
        run: |
          .github/workflows/script/gcs_test.sh || RC=$? || true
          if [[ "${RC}" != "0" ]]; then
            echo "GCS test failed with exit code ${RC}"
            npm run solo-test -- node logs --deployment solo-e2e -q --dev || true
            exit ${RC}
          fi

      - name: Upload Logs to GitHub
        if: ${{ steps.check.outputs.run == 'true' && always() }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: solo-logs-${{ matrix.storageType }}
          path: ~/.solo/logs/*
          if-no-files-found: error

      - name: Delete Test Directory after Test
        # add always() to make sure bucket is deleted even if the test failed
        if: (steps.check.outputs.run == 'true' && always() && (matrix.storageType == 'gcs_only' || matrix.storageType == 'aws_only'))
        run: |
          gcloud storage rm --recursive gs://${BUCKET_NAME}/${{ steps.jobs.outputs.job_id }} --project=${{ vars.GCP_S3_PROJECT_ID }}
          gcloud storage rm --recursive gs://${BACKUP_BUCKET_NAME}/${{ steps.jobs.outputs.job_id }} --project=${{ vars.GCP_S3_PROJECT_ID }}
