##
# Copyright (C) 2023-2024 Hedera Hashgraph, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##

name: Build Hugo Docs

on:
  workflow_call:
    inputs:
      docs-build-label:
        description: "The docs build label to build for Solo, can be a version tag or `main`, e.g. 'v0.37.2'"
        type: string
        required: false
        default: 'main' # main is used unless it is a version tag already released or about to be released
      download-artifacts:
        description: "Whether to download previous artifacts for the build, e.g. 'true' or 'false'"
        type: boolean
        required: false
        default: false # only enable if we are building the 'main' branch, and we already ran for a specific version
      ref:
        description: 'The Git reference (commit SHA, branch, or tag) to checkout.'
        required: true # It's good practice to make this required
        type: string
    secrets:
      github-token:
        description: "GitHub Token to use for authentication, e.g. 'GITHUB_TOKEN'"
        required: false

permissions:
  contents: read

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build
    runs-on: hiero-solo-linux-large
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Validate docs-build-label input
        run: |
          DOCS_BUILD_LABEL="${{ inputs.docs-build-label }}"
          echo "Validating docs-build-label: ${DOCS_BUILD_LABEL}"
          if [[ "${DOCS_BUILD_LABEL}" == "main" ]]; then
            echo "Input is 'main', no validation needed."
            exit 0
          fi
          SEMVER_CHECK=$(semver validate "${DOCS_BUILD_LABEL}" 2>/dev/null || true)
          if [[ "${SEMVER_CHECK}" == "valid" ]]; then
            echo "Input '${DOCS_BUILD_LABEL}' is a valid semantic version."
          else
            echo "Input '${DOCS_BUILD_LABEL}' is not a valid semantic version."
            exit 1
          fi

      - name: Checkout Code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          ref: ${{ inputs.ref }} # Use the ref input to check out the correct branch or tag

      - name: Setup Node
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: 22

      - name: Install Task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
        with:
          version: 3.39.2
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # pinned to v6.0.0
        with:
          go-version-file: 'docs/site/go.mod'

      - name: Install wget
        run: |
          sudo apt-get update
          sudo apt-get install -y wget

      - name: Install Kubectl
        uses: step-security/setup-kubectl@2edbf6aff97d814e9dc52827498ac51fe972e6d0 # pinned to v4.0.0
        with:
          version: 'v1.27.3'
        id: install

      - name: Setup Helm
        uses: azure/setup-helm@1a275c3b69536ee54be43f2070a358922e12c8d4 # v4.3.1
        with:
          version: "v3.12.3" # helm version

      - name: Setup Kind
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
        with:
          install_only: true
          node_image: kindest/node:v1.31.4@sha256:2cb39f7295fe7eafee0842b1052a599a4fb0f8bcf3f83d96c7f4864c357c6c30
          version: v0.26.0
          kubectl_version: v1.31.4
          verbosity: 3
          wait: 120s

      # Download the previous artifacts if we built a specific version and this is `main`
      - name: Download Previous Artifacts
        if: ${{ inputs.download-artifacts && !cancelled() && !failure() }}
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: hugo-build-artifacts
          path: docs/site

      - name: List Artifacts
        if: ${{ inputs.download-artifacts && !cancelled() && !failure() }}
        run: |
          set -eo pipefail
          echo "Listing downloaded build artifacts:"
          ls -la ./docs/site/build # what to upload as a release artifact
          ls -la ./docs/site/public # what to upload to GitHub Pages

      - name: Build Docs with Hugo
        env:
          GH_TOKEN: ${{ secrets.github-token }} # We want this to be null unless we want to pull the existing release artifacts
        run: |
          set -eo pipefail
          cd docs/site
          DOCS_BUILD_LABEL="${{ inputs.docs-build-label }}"
          if [[ -z ${DOCS_BUILD_LABEL} ]]; then
            SOLO_CI=true GH_TOKEN=${{ secrets.github-token }} task build 
          else
            SOLO_CI=true GH_TOKEN=${{ secrets.github-token }} HUGO_SOLO_VERSION=${DOCS_BUILD_LABEL} task build
          fi

      # Upload the built site to artifacts
      - name: Upload Artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: hugo-build-artifacts
          overwrite: true
          path: |
            docs/site/build
            docs/site/public
            docs/site/content
            docs/site/static
