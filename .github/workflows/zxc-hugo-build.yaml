##
# Copyright (C) 2023-2024 Hedera Hashgraph, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##

name: Build Hugo Docs

on:
  workflow_call:
    inputs:
      solo-version:
        description: "Solo Version to build docs for and attach to the release, e.g. 'v0.37.2', 'main'"
        type: string
        required: false
        default: 'main' # main is used unless it is a version tag already released or about to be released
      github-token:
        description: "GitHub Token to use for authentication, e.g. 'GITHUB_TOKEN'"
        type: string
        required: false
      download-artifacts:
        description: "Whether to download previous artifacts for the build, e.g. 'true' or 'false'"
        type: boolean
        required: false
        default: false # only enable if we are building the 'main' branch, and we already ran for a specific version

permissions:
  contents: read
  id-token: read

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build
    runs-on: hiero-solo-linux-medium
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Validate solo-version input
        run: |
          SOLO_VERSION="${{ inputs.solo-version }}"
          echo "Validating solo-version: ${SOLO_VERSION}"

          # Regex for vMAJOR.MINOR.PATCH (e.g., v0.37.2, v1.0.0)
          # - ^v: starts with 'v'
          # - [0-9]+: one or more digits (for major, minor, patch)
          # - \.: a literal dot
          # - $: ends the string
          SEMVER_REGEX="^v[0-9]+\.[0-9]+\.[0-9]+$"

          if [[ "${SOLO_VERSION}" == "main" ]]; then
            echo "Input '${SOLO_VERSION}' is valid (matches 'main')."
          elif [[ "${SOLO_VERSION}" =~ ${SEMVER_REGEX} ]]; then
            echo "Input '${SOLO_VERSION}' is a valid semver string."
          else
            echo "::error::Invalid solo-version: '${SOLO_VERSION}'"
            echo "It must be either the string 'main' or a semantic version prefixed with 'v' (e.g., v0.37.2)."
            exit 1
          fi

      # Checkout default ref to build docs for a specific version or if the ref is 'main'
      - name: Checkout Code
        if: ${{ inputs.solo-version != 'main' || github.ref_name == 'main' && !cancelled() && !failure() }}
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      # Force checkout main branch to do a solo-version = 'main' build, unless the ref is already 'main'
      - name: Checkout Code
        if: ${{ inputs.solo-version == 'main' && github.ref_name != 'main' && !cancelled() && !failure() }}
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          ref: 'main'

      - name: Setup Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 21

      - name: Install Task
        uses: arduino/setup-task@b91d5d2c96a56797b48ac1e0e89220bf64044611 # v2.0.0
        with:
          version: 3.39.2
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # pinned to v5.5.0
        with:
          go-version-file: 'docs/site/go.mod'

      # Download the previous artifacts if we built a specific version and this is `main`
      - name: Download Previous Artifacts
        if: ${{ inputs.download-artifacts && !cancelled() && !failure() }}
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: hugo-build-artifacts

      - name: List Artifacts
        if: ${{ inputs.download-artifacts && !cancelled() && !failure() }}
        run: |
          set -xeo pipefail
          echo "Listing downloaded build artifacts:"
          ls -la ./docs/site/build # what to upload as a release artifact
          ls -la ./docs/site/public # what to upload to GitHub Pages

      - name: Build Docs with Hugo
        env:
          GH_TOKEN: ${{ inputs.github-token }} # We want this to be null unless we want to pull the existing release artifacts
        run: |
          set -xeo pipefail
          cd docs/site
          HUGO_SOLO_VERSION="${{ inputs.solo-version }}"
          if [[ -z ${HUGO_SOLO_VERSION} ]]; then
           task build 
          else
            HUGO_SOLO_VERSION=${HUGO_SOLO_VERSION} task build
          fi

      # Upload the built site to artifacts
      - name: Upload Artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: hugo-build-artifacts
          overwrite: true
          path: |
            ./docs/site/build # what to upload as a release artifact
            ./docs/site/public # what to upload to GitHub Pages
            ./docs/site/content # the documentation to be rendered by Hugo
            ./docs/site/static # the typedoc class files
