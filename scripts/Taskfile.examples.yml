version: '3'
# This Taskfile archives example directories and optionally uploads them to a GitHub release.
# It can be used in CI/CD pipelines or run locally.
# Example usage:
# task -t scripts/Taskfile.examples.yml create-example-asset-archives UPLOAD_TO_RELEASE=false RELEASE_TAG=v0.43.0 CLEAN_UP=false

tasks:
  create-example-asset-archives:
    desc: Zip and upload example assets for release
    cmds:
      - echo "Copying examples to solo-examples directory..."
      - rm -rf solo-examples
      - mkdir -p solo-examples
      - cp -r ../examples/* solo-examples/
      - echo "Examples copied to solo-examples."
      - |
        echo "Starting to zip example directories..."
        for dir in solo-examples/*/ ; do
          name=$(basename "$dir")
          zip_name="example-${name}.zip"
          echo "Zipping $dir to solo-examples/${zip_name}..."
          zip -r "solo-examples/${zip_name}" "$dir"
          echo "Finished zipping $dir."
        done
        echo "All example directories zipped."
      - |
        if [ "{{.UPLOAD_TO_RELEASE}}" == "true" ]; then
          echo "Starting upload of zipped examples..."
        
          # Determine which release tag to use
          if [ "{{.RELEASE_TAG}}" != "" ]; then
            echo "Using specified release tag: {{.RELEASE_TAG}}"
            RELEASE_TAG="{{.RELEASE_TAG}}"
          else
            echo "No release tag specified, finding latest release..."
            RELEASE_TAG=$(gh release list --limit 1 --json tagName -q '.[0].tagName')
            echo "Using latest release tag: $RELEASE_TAG"
          fi
        
          if [ -z "$RELEASE_TAG" ]; then
            echo "ERROR: Could not determine release tag. Please specify RELEASE_TAG parameter."
            exit 1
          fi
        
          echo "Uploading to release tag: $RELEASE_TAG"
        
           # Upload each zip file to the release
           for zip in solo-examples/*.zip; do
             name=$(basename "$zip")
             echo "Uploading $zip as $name to release $RELEASE_TAG..."
             echo "Command: gh release upload --clobber \"$RELEASE_TAG\" \"$zip\""
             gh release upload --clobber "$RELEASE_TAG" "$zip"
             UPLOAD_STATUS=$?
             if [ $UPLOAD_STATUS -eq 0 ]; then
               echo "✅ Successfully uploaded $name to release $RELEASE_TAG"
             else
               echo "❌ Failed to upload $name to release $RELEASE_TAG (exit code: $UPLOAD_STATUS)"
             fi
           done
        
          echo "All zipped examples uploaded."
        else
          echo "Skipping upload to release. Files are available in solo-examples directory."
        fi
      - |
        if [ "{{.CLEAN_UP}}" == "true" ]; then
          echo "Removing solo-examples directory..."
          rm -rf solo-examples
          echo "solo-examples directory removed."
        fi
    vars:
      UPLOAD_TO_RELEASE: '{{.UPLOAD_TO_RELEASE | default "false"}}'
      RELEASE_TAG: '{{.RELEASE_TAG | default ""}}'
      CLEAN_UP: '{{.CLEAN_UP | default "true"}}'
